unit DVL.DAO.RequestClass;


interface

uses DVL.DAO.IRequest,DVL.DAO.DataModule, DVL.Model.DeviceClass,
  System.Classes, System.JSON;
  type

    TDAORequest = class(TInterfacedObject, IDAORequest)
    private
     FDevices : TDevices;
     _data : TdmDados;
     _objList : TStringList;
    public
    constructor Create(DeviceClass :TDevices);
    destructor Destroy; override;
    procedure Update;
    procedure Insert;
    procedure Delete;
    function GetData : TStringList;
    function DataWithJson : TJSONArray;

    end;

implementation

uses System.SysUtils;



{ TDAORequest }


constructor TDAORequest.Create(DeviceClass: TDevices);
begin
 FDevices := DeviceClass;
 _data := TdmDados.Create(nil);
 _objList := TStringList.Create;
end;

function TDAORequest.DataWithJson: TJSONArray;
begin

end;

procedure TDAORequest.Delete;
begin
 with _data.fdQueryMain do begin
   Close;
   SQL.Clear;
   SQL.Add('DELETE FROM DEVICE WHERE ID = :id');
   ParamByName('ID').AsInteger := FDevices.ID_Device;
   ExecSQL;
 end;
end;


destructor TDAORequest.Destroy;
begin
    _objList.Free;
    _data.Free;
  inherited;
end;

function TDAORequest.GetData: TStringList;
var jObject : TJSONObject; I : Integer;
begin
 try

    with _data.fdQueryMain do begin
   Close;
   SQL.Clear;
   SQL.Add('SELECT * FROM DEVICE');
   Open;

   _objList.Add('{"total":' + IntToStr(RecordCount) + '}');

   if RecordCount > 0 then begin
     for I := 0 to RecordCount -1 do begin
      jObject := TJSONObject.Create;
      try
        jObject.AddPair('id',FieldByName('ID').Text);
        jObject.AddPair(FieldByName('NAME').Text,FieldByName('ADDRESS').Text);
       _objList.Add(jObject.ToString);

       if not EOF then
          Next;

      finally
       jObject.Free;
      end;
     end;
   end;
   Result := _objList;
 end;
 finally

 end;
end;

procedure TDAORequest.Insert;
begin
  with _data.fdQueryMain do begin
    Close;
    SQL.Clear;
    SQL.Add('INSERT INTO DEVICE (NAME, ADDRESS) VALUES '+
        ' (:name, :address)');
    ParamByName('name').AsString := FDevices.Device_Name;
    ParamByName('address').AsString := FDevices.Device_Address;
    ExecSQL;
  end;
end;

procedure TDAORequest.Update;
begin
   with _data.fdQueryMain do begin
    Close;
    SQL.Clear;
    SQL.Add('UPDATE DEVICE SET NAME = :name , ADDRESS = :address '+
        'WHERE ID = :id');
    ParamByName('id').AsInteger := FDevices.ID_Device;
    ParamByName('name').AsString := FDevices.Device_Name;
    ParamByName('address').AsString := FDevices.Device_Address;
    ExecSQL;
  end;
end;

end.
