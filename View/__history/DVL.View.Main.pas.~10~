unit DVL.View.Main;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uDWAbout, uRESTDWBase, Vcl.StdCtrls,
  DV.Controll.APISource, DVL.View.SettingsInterface, DVL.View.SettingsClass,
  Vcl.Buttons, Vcl.Imaging.pngimage, Vcl.ExtCtrls;

type
  TfrmMain = class(TForm)
    btnService: TButton;
    lblStatus: TLabel;
    poolerService: TRESTServicePooler;
    ckAutoStart: TCheckBox;
    ckStartOnSys: TCheckBox;
    edtPort: TEdit;
    imgSave: TImage;
    procedure FormCreate(Sender: TObject);
    procedure btnServiceClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure imgSaveClick(Sender: TObject);
  private
    { Private declarations }
    _Settings : ISettings;
    procedure ServicePower;
    procedure UpdateUISettings;
    procedure SaveSettings;
  public
    { Public declarations }
  end;

var
  frmMain: TfrmMain;

implementation

{$R *.dfm}

procedure TfrmMain.btnServiceClick(Sender: TObject);
begin
 ServicePower;

end;

procedure TfrmMain.FormCreate(Sender: TObject);
begin
poolerService.ServerMethodClass := TAPISource;
_Settings := TSettings.Create;
end;

procedure TfrmMain.FormShow(Sender: TObject);
begin
 poolerService.ServicePort := _Settings.ServicePort;
 UpdateUISettings;

 if _Settings.AutoStart then
    ServicePower;

end;

procedure TfrmMain.imgSaveClick(Sender: TObject);
begin
 if poolerService.Active then begin
   Application.MessageBox('Turn off Service to Change Settings!','DeviceList',MB_OK+MB_ICONEXCLAMATION);
 end
 else
 begin
   SaveSettings;
   UpdateUISettings;
    Application.MessageBox('Settings Save with Sucessful!','DeviceList',MB_OK+MB_ICONINFORMATION);
 end;

end;

procedure TfrmMain.SaveSettings;
begin
 with _Settings do begin
   StartOnSys(ckStartOnSys.Checked);
   ServicePort(StrToInt(edtPort.Text));
   AutoStart(ckAutoStart.Checked);
 end;
end;

procedure TfrmMain.ServicePower;
begin
  if poolerService.Active then begin
  btnService.Caption := 'Start Server';
  lblStatus.Caption := 'Offline';
  poolerService.Active := False;
 end
 else
 begin
  btnService.Caption := 'Stop Server';
  lblStatus.Caption := 'Online';
  poolerService.Active := True;
 end;
end;

procedure TfrmMain.UpdateUISettings;
begin
  with _Settings do begin
     ckAutoStart.Checked := AutoStart;
     ckStartOnSys.Checked := StartOnSys;
     edtPort.Text := IntToStr(ServicePort);
  end;
end;

end.
